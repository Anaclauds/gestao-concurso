@* @page "/consultarInscricoes"
@using AppConcurso.Models
@using AppConcurso.Controllers
@inject CandidatoController candidatoController *@

@* <h3>Consultar Inscrições do Candidato</h3> *@

@* <div class="mb-3">
    <label for="candidatoId" class="form-label">Número de Inscrição:</label>
    <input @bind="candidatoId" type="number" class="form-control" id="candidatoId" />
    <button class="btn btn-primary mt-2" @onclick="BuscarConcursos">Buscar</button>
</div> *@

@* @if (concursos.Any())
{
    <h4>Concursos Inscritos:</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Concurso</th>
                <th>Data</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var concurso in concursos)
            {
                <tr>
                    <td>@concurso.Edital</td>
                    <td>@concurso.DataConcurso?.ToString("dd/MM/yyyy")</td>
                </tr>
            }
        </tbody>
    </table>

    //<button class="btn btn-success" @onclick="Imprimir">Imprimir Lista</button>
}
else if (buscou && !concursos.Any())
{
    <p class="text-danger">Nenhuma inscrição encontrada para este candidato.</p>
} *@

@* @code {
    private int candidatoId;
    private List<Concurso> concursos = new();
    private bool buscou = false;

    private async Task BuscarConcursos()
    {
        if (candidatoId > 0)
        {
            concursos = await candidatoController.ObterConcursosPorCandidato(candidatoId);
            buscou = true;
        }
    }

   /* private void Imprimir()
         {
         JS.InvokeVoidAsync("print");
    } */
} *@


@page "/consultarInscricoes"
@using AppConcurso.Models
@using AppConcurso.Controllers
@using AppConcurso.Utilitarios
@inject CandidatoController candidatoController
@inject InscricaoController inscricaoController
@inject NavigationManager Navigation

<h3>Consulta de Inscrições</h3>

<div class="container">
    <div class="mb-3">
        <label for="candidato" class="form-label">Selecione um candidato:</label>
        <select id="candidato" class="form-control" @bind="CandidatoSelecionado">
            <option value="">Selecione um candidato</option>
            @foreach (var candidato in ListaCandidatos)
            {
                <option value="@candidato.Id">@candidato.Nome</option>
            }
        </select>
    </div>

    @if (ListaConcursos.Any())
    {
        <h4>Concursos em que o candidato está inscrito:</h4>
        <ul class="list-group">
            @foreach (var concurso in ListaConcursos)
            {
                <li class="list-group-item">@concurso.Edital - @concurso.DataConcurso?.ToString("dd/MM/yyyy")</li>
            }
        </ul>

        <button type="button" class="btn btn-primary mt-3" @onclick="GerarRelatorio">Imprimir Lista de Inscritos</button>
    }
</div>

@code {
    private int candidatoId;
    private List<Candidato> ListaCandidatos = new();
    private List<Concurso> ListaConcursos = new();

    private int CandidatoSelecionado
    {
        get => candidatoId;
        set
        {
            candidatoId = value;
            CarregarInscricoes();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        ListaCandidatos = await candidatoController.ListaCandidatos();
    }

    private async Task CarregarInscricoes()
    {
        if (candidatoId > 0)
        {
            ListaConcursos = await inscricaoController.ObterConcursosPorCandidato(candidatoId);
            StateHasChanged();
        }
    }

    private async Task GerarRelatorio()
    {
        try
        {
            // Obtem os dados do relatório
            var listaCandidatos = await inscricaoController.ObterDadosRelatorio();

            // Instancia a classe "Impressora" e gera o relatório
            var impressora = new Impressora();
            await impressora.GerarRelatorioInscritos(listaCandidatos, Navigation);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro: " + ex.Message);
        }
    }
}
