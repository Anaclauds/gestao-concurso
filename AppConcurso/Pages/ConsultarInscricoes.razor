@page "/consultarInscricoes"
@using AppConcurso.Models
@using AppConcurso.Controllers
@using AppConcurso.Utilitarios
@inject CandidatoController candidatoController
@inject InscricaoController inscricaoController
@inject NavigationManager Navigation

<h3 class="text-center mt-4 fw-bold">Consulta de Inscrições</h3>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="mb-3">
                <label for="candidato" class="form-label fw-bold">Selecione um candidato:</label>
                <select id="candidato" class="form-select" @bind="CandidatoSelecionado">
                    <option value="0">-- Selecione um candidato --</option>
                    @foreach (var candidato in ListaCandidatos)
                    {
                        <option value="@candidato.Id">@candidato.Nome</option>
                    }
                </select>
            </div>
        </div>
    </div>

    @if (ListaConcursos.Any())
    {
        <h4 class="mt-4 text-center fw-bold">Concursos em que o candidato está inscrito:</h4>

        <div class="row justify-content-center">
            <div class="col-md-6">
                <ul class="list-group">
                    @foreach (var concurso in ListaConcursos)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-file-alt text-primary"></i> @concurso.Edital</span>
                            <span class="badge bg-secondary">@concurso.DataConcurso?.ToString("dd/MM/yyyy")</span>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="text-center mt-4">
            <button type="button" class="btn btn-success" @onclick="GerarRelatorio">
                <i class="fas fa-print"></i> Imprimir Lista de Inscritos
            </button>
        </div>
    }
    else if (CandidatoSelecionado > 0 && !ListaConcursos.Any())
    {
        <div class="alert alert-warning text-center mt-4" role="alert">
            <i class="fas fa-exclamation-circle"></i> Nenhuma inscrição encontrada para este candidato.
        </div>
    }
</div>

@code {
    private int candidatoId;
    private List<Candidato> ListaCandidatos = new();
    private List<Concurso> ListaConcursos = new();

    private int CandidatoSelecionado
    {
        get => candidatoId;
        set
        {
            candidatoId = value;
            CarregarInscricoes();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        ListaCandidatos = await candidatoController.ListaCandidatos();
    }

    private async Task CarregarInscricoes()
    {
        if (candidatoId > 0)
        {
            ListaConcursos = await inscricaoController.ObterConcursosPorCandidato(candidatoId);
            StateHasChanged();
        }
    }

    private async Task GerarRelatorio()
    {
        try
        {
            var listaCandidatos = await inscricaoController.ObterDadosRelatorio();
            var impressora = new Impressora();
            await impressora.GerarRelatorioInscritos(listaCandidatos, Navigation);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Erro: " + ex.Message);
        }
    }
}
