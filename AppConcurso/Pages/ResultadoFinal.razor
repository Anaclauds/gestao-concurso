@page "/resultadoFinal"
@using AppConcurso.Models;
@using AppConcurso.Controllers;
@inject InscricaoController inscControl;
@inject CargoController cargoControl;
@inject NavigationManager navegacao;

<h3>RESULTADO FINAL</h3>

<div class="container">
    <label for="veiculo" class="form-label">CARGOS:</label>
    <select @onchange="SelecionarCargos" class="form-select" aria-label="Selecione um Cargo">
        <option selected>Selecione um cargo</option>
        @if (listaCargos != null)
        {
            @foreach (var item in listaCargos)
            {
                <option value="@item.Id">@item.NomeCargo</option>
            }
        }
    </select>

    <br />

    @if (listaClassificada != null && listaClassificada.Any())
    {
        <h4>Classificação</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>NOME</th>
                    <th>NOTA CONH. GERAIS</th>
                    <th>NOTA CONH. ESPECÍFICOS</th>
                    <th>MÉDIA</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var inscricao in listaClassificada)
                {
                    <tr>
                        <td>@inscricao.Candidato.NomeCandidato</td>
                        <td>@inscricao.NotaConhGerais</td>
                        <td>@inscricao.NotaConhEspecificos</td>
                        <td>@CalcularMedia(inscricao)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            Selecione um cargo para visualizar os resultados.
        </div>
    }
</div>

@code {
    List<Inscricao> listaClassificada;
    List<Cargo> listaCargos;

    protected override async Task OnInitializedAsync()
    {
        listaCargos = await cargoControl.ListaCargos();
    }

    async Task SelecionarCargos(ChangeEventArgs e)
    {
        if (e.Value != null && !string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            int idCargo = int.Parse(e.Value.ToString());
            var listaInscritos = await inscControl.ListaInscricoesPorCargo(idCargo);

            // Calcular a média para cada candidato
            listaClassificada = listaInscritos.OrderByDescending(i => CalcularMedia(i))
                .ThenByDescending(i => i.NotaConhEspecificos)
                .ThenByDescending(i => i.NotaConhGerais)
                .ThenByDescending(i => i.Candidato.DataNascimento) // Ordenar pela idade mais alta
                .ToList();
        }
        else
        {
            listaClassificada = null;
        }
    }

    decimal CalcularMedia(Inscricao inscricao)
    {
        decimal notaConhGerais = inscricao.NotaConhGerais ?? 0;
        decimal notaConhEspecificos = inscricao.NotaConhEspecificos ?? 0;
        return (notaConhGerais + notaConhEspecificos) / 2;
    }
}
